# Multi-stage build for DB migrations
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including devDependencies for build)
RUN npm ci

# Copy source code
COPY . .

# Build the application
RUN npm run build || echo "Build step skipped if no build script"

# Production stage
FROM node:20-alpine

WORKDIR /app

# Install PostgreSQL client for migrations
RUN apk add --no-cache postgresql-client

# Copy package files and install production dependencies
COPY package*.json ./
RUN npm ci --production

# Copy built application and migration scripts
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/src ./src
COPY --from=builder /app/scripts ./scripts
COPY --from=builder /app/public ./public

# Install tsx for running TypeScript migrations
RUN npm install -g tsx

# Set platform
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production

# Default command for migrations
CMD ["sh", "-c", "npm run db:migrate && npm run db:migrate:verify"]