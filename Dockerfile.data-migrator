FROM node:20-alpine

WORKDIR /app

# Install required tools
RUN apk add --no-cache \
    postgresql-client \
    python3 \
    make \
    g++ \
    curl \
    bash \
    aws-cli

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy all source files
COPY . .

# Build the application
RUN npm run build || true

# Create migration script
RUN cat > /run-migration.sh << 'EOF'
#!/bin/bash
set -e

echo "=== OTS-ERP Data Migration ==="
echo "=============================="
echo

# Setup SSL for RDS
echo "Setting up RDS SSL..."
curl -s https://truststore.pki.rds.amazonaws.com/us-east-2/us-east-2-bundle.pem -o /tmp/rds-ca.pem
export PGSSLROOTCERT=/tmp/rds-ca.pem
export PGSSLMODE=verify-full

# 1) Storage Migration
echo "Step 1: Storage Migration (Supabase → S3)"
echo "------------------------------------------"
if [ -f "scripts/migrate-storage.js" ]; then
  echo "Running dry-run first..."
  npm run migrate:storage -- --dry-run || echo "Dry-run completed with warnings"
  
  echo "Running actual migration..."
  npm run migrate:storage || echo "Storage migration completed with warnings"
else
  echo "Storage migration script not found, skipping..."
fi

# 2) Database Export
echo -e "\nStep 2: Database Export from Supabase"
echo "--------------------------------------"
if [ -f "scripts/export-supabase.sh" ]; then
  chmod +x scripts/export-supabase.sh
  ./scripts/export-supabase.sh || echo "Export completed with warnings"
else
  echo "Creating minimal export..."
  # Fallback: direct connection if DATABASE_URL is set
  if [ -n "$DATABASE_URL" ]; then
    pg_dump "$DATABASE_URL" --no-owner --no-acl --clean --if-exists > /tmp/supabase-dump.sql
    echo "Export created: /tmp/supabase-dump.sql"
  else
    echo "No DATABASE_URL configured, skipping export"
  fi
fi

# 3) Database Import
echo -e "\nStep 3: Database Import to RDS"
echo "-------------------------------"
export PGHOST="$RDS_ENDPOINT"
export PGDATABASE="$RDS_DB"
export PGUSER="$RDS_USER"
export PGPASSWORD="$RDS_PASSWORD"

echo "Connecting to: $PGHOST as $PGUSER"

# Check connection first
if psql -c "SELECT 'RDS connection successful' as status;" 2>/dev/null; then
  echo "✅ RDS connection verified"
  
  # Import dump if exists
  if [ -f "/tmp/supabase-dump.sql" ]; then
    echo "Importing database dump..."
    psql < /tmp/supabase-dump.sql 2>&1 | grep -E "ERROR|CREATE|ALTER|INSERT" | head -50
    echo "Import completed"
  elif [ -f "scripts/import-rds.sh" ]; then
    chmod +x scripts/import-rds.sh
    ./scripts/import-rds.sh
  else
    echo "No dump file to import"
  fi
else
  echo "❌ Failed to connect to RDS"
  exit 1
fi

# 4) Validation
echo -e "\nStep 4: Data Validation"
echo "------------------------"
if [ -f "scripts/validate-data.ts" ]; then
  npx tsx scripts/validate-data.ts || echo "Validation completed with warnings"
else
  # Basic validation
  echo "Running basic validation..."
  psql -c "SELECT tablename, COUNT(*) OVER() as total_tables FROM pg_tables WHERE schemaname = 'public';" | head -20
  
  # Count key tables
  for table in User Customer Job Material Invoice; do
    COUNT=$(psql -t -c "SELECT COUNT(*) FROM \"$table\"" 2>/dev/null || echo "0")
    echo "$table: $COUNT rows"
  done
fi

echo -e "\n=== Migration Complete ==="
echo "=========================="
EOF

RUN chmod +x /run-migration.sh

CMD ["/run-migration.sh"]